@using System.Linq
@using slls.Models
@using Westwind.Globalization
@model System.Collections.Generic.IEnumerable<slls.Models.Copy>

<div class="row">
    @foreach (var item in Model.OrderBy(c => c.CopyNumber))
    {
        <div class="col-md-12">
            <div class="thumbnail">
                <div class="caption" style="border-bottom: 1px solid #ddd; margin-bottom: 15px;">
                    <span class="pull-right">
                        <a href="@Url.Action("Edit", "Copies", new {id = item.CopyID}, null)" class="btn btn-link" title="View/Edit @DbRes.T("Copies.Copy", "FieldDisplayName")" role="button"><span aria-hidden="true" class="glyphicon glyphicon-pencil"></span></a>
                        <a href="@Url.Action("Delete", "Copies", new {id = item.CopyID}, null)" class="btn btn-link modal-link" title="Delete @DbRes.T("Copies.copy", "FieldDisplayName" )" role="button"><span aria-hidden="true" class="glyphicon glyphicon-trash"></span></a>
                    </span>
                    <a href="@Url.Action("Edit", "Copies", new {id = item.CopyID}, null)" class="btn btn-link" title="View/Edit @DbRes.T("Copies.Copy", "FieldDisplayName")" role="button"><strong>@Html.Label(DbRes.T("Copies.Copy_Number", "FieldDisplayName")):&nbsp;@Html.Raw(item.CopyNumber)</strong></a>
                </div>
                <div class="row">
                    <div class="col-sm-5">
                        <dl class="dl-horizontal">
                            <dt>@Html.Label(DbRes.T("Locations.Location", "FieldDisplayName")):</dt>
                            <dd>@Html.DisplayFor(modelItem => item.Location.ParentLocation.Location1) @Html.DisplayFor(modelItem => item.Location.Location1) </dd>
                            <dt>@Html.Label(DbRes.T("StatusTypes.Status_Type", "FieldDisplayName")):</dt>
                            <dd>@Html.DisplayFor(modelItem => item.StatusType.Status)</dd>
                            <dt>@Html.DisplayNameFor(model => model.Holdings):</dt>
                            <dd>@Html.DisplayFor(modelItem => item.Holdings)</dd>
                            <dt>@Html.DisplayNameFor(model => model.Notes):</dt>
                            <dd>@Html.DisplayFor(modelItem => item.Notes)</dd>
                        </dl>
                    </div>

                    <div class="col-sm-7">
                        <dl>
                            <dt>@DbRes.T("CopyItems", "EntityType"):</dt>
                            <dd>
                                <table class="table table-compact table-no-border">
                                    <thead>
                                        <tr>
                                            <th>@Html.DisplayName(DbRes.T("CopyItems.Barcode", "FieldDisplayName"))</th>
                                            <th>@Html.DisplayName(DbRes.T("CopyItems.Label_Text", "FieldDisplayName"))</th>
                                            <th>@Html.DisplayName(DbRes.T("CopyItems.Is_Ref_Only", "FieldDisplayName"))</th>
                                            <th>@Html.DisplayName(DbRes.T("CopyItems.Is_On_Loan", "FieldDisplayName"))</th>
                                            <th>@Html.DisplayName(DbRes.T("Borrowing.Borrowed_By", "FieldDisplayName"))</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var volume in item.Volumes)
                                        {
                                            <tr>
                                                <td><a href="@Url.Action("Edit", "Volumes", new { id = volume.VolumeID }, null)" class="modal-link" title="View/Edit Volume">@Html.DisplayFor(x => volume.Barcode)</a></td>
                                                <td>@Html.DisplayFor(x => volume.LabelText)</td>
                                                <td>@Html.DisplayFor(x => volume.LoanType.RefOnly)</td>
                                                <td>@Html.DisplayFor(x => volume.OnLoan)</td>
                                                @{
                                                    if (volume.OnLoan)
                                                    {
                                                        var lastOrDefault = volume.Borrowings.LastOrDefault(b => b.Returned == null);
                                                        if (lastOrDefault != null)
                                                        {
                                                            var borrower = lastOrDefault.BorrowerUser;
                                                            <td><a href="@Url.Action("Edit", "LibraryUsers", new { id = borrower.Id })" class="modal-link">@Html.DisplayFor(x => borrower.Fullname)</a>&nbsp;&nbsp;<a href="@Url.Action("NewEmailPopup", "Messaging", new { to = borrower.Email, subject = "Message about: " + volume.Copy.Title.Title1, area = "" })" class="modal-link" title="Email @borrower.Firstname"><span class="glyphicon glyphicon-envelope"></span></a></td>
                                                        }
                                                        else
                                                        {
                                                            <td></td>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <td></td>
                                                    }
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
