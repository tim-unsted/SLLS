@using System.Linq
@using slls.Utils.Helpers
@using Westwind.Globalization
@model slls.ViewModels.CopyDetailsEditViewModel

@using (Html.BeginForm("PostEdit", "Copies", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CopyId)
        @Html.HiddenFor(model => model.TitleId)
        @Html.HiddenFor(model => model.CancelledByUser)
        @Html.HiddenFor(model => model.Cancellation)
        @Html.HiddenFor(model => model.AccountYearId)
        @Html.HiddenFor(model => model.Saving)

        <div class="form-group">
            <div class="col-md-12">
                @Html.Label(DbRes.T("Titles.Title", "FieldDisplayName")
            </div>
            <div class="col-md-12">
                <span class="form-control"><a href="@Url.Action("Edit", "Titles", new {id = @Model.TitleId}, null)" title="View/Edit Title">@Model.Title</a></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.CopyNumber)
                @Html.EditorFor(model => model.CopyNumber, new { htmlAttributes = new { @class = "form-control col-md-2" } })
                @Html.ValidationMessageFor(model => model.CopyNumber, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Commenced)
                @Html.EditorFor(model => model.Commenced, new { htmlAttributes = new { @class = "form-control", id = "dateCommenced" } })
                @Html.ValidationMessageFor(model => model.Commenced, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.AcquisitionsNo)
                @Html.EditorFor(model => model.AcquisitionsNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AcquisitionsNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                @Html.Label(DbRes.T("Locations.Location", "FieldDisplayName"))
                @Html.DropDownList("LocationID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.Partial("_selectStatusTypeViewEdit")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrintLabel, htmlAttributes: new { @class = "control-label-left col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PrintLabel)
                    @Html.ValidationMessageFor(model => model.PrintLabel, "", new { @class = "text-danger" })
                    <span class="help-inline">Tick if you would like to print labels for this copy / entire set, e.g. all copy items.</span>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AcquisitionsList, htmlAttributes: new { @class = "control-label-left col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AcquisitionsList)
                    @Html.ValidationMessageFor(model => model.AcquisitionsList, "", new { @class = "text-danger" })
                    <span class="help-inline">Should this item appear on the 'New Titles' list?</span>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bind, htmlAttributes: new { @class = "control-label-left col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Bind)
                    @Html.ValidationMessageFor(model => model.Bind, "", new { @class = "text-danger" })
                    <span class="help-inline">Is this item usually bound?</span>
                </div>
            </div>
        </div>

        @if (Model.IsSerialsAdmin)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Circulated, htmlAttributes: new { @class = "control-label-left col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Circulated)
                        @Html.ValidationMessageFor(model => model.Circulated, "", new { @class = "text-danger" })
                        <span class="help-inline">Is this item circulated?</span>
                    </div>
                </div>
            </div>

            <div id="circulationFields" style="display: @(Model.Circulated ? "block" : "none")">
                <div class="form-group">
                    @Html.Label(DbRes.T("Circulation.Circulation_List", "FieldDisplayName"), htmlAttributes: new { @class = "control-label-left col-md-2" })
                    <div class="col-md-10">
                        @Html.ActionLink(Model.Circulations.Any() ? "No recipients" : Model.Circulations.Count().ToString() + " recipient(s)", "CirculationList", "Circulation", new { copy = Model.CopyId }, new { @class = "form-control btn-link" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.CirculationMessage.CirculationMsg)
                        @Html.DropDownList("CirculationMsgID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CirculationMsgId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Holdings)
                    @Html.TextAreaFor(model => model.Holdings, new { rows = "", cols = "", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Holdings, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Notes)
                @Html.TextAreaFor(model => model.Notes, new { rows = "", cols = "", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-footer">
            @if (ViewBag.RecordCount > 1)
            {
                <span class="pull-left" style="padding-right: 15px;">@Html.Partial("_PaginateDetails", Model)</span>
                
            }
            <span class="pull-left">
                <a href="@Url.Action("Delete", new {id = Model.CopyId})" class="btn btn-danger modal-link" title="Delete Copy"><span aria-hidden="true" class="glyphicon glyphicon-trash"></span> Delete Copy</a>
            </span>

            <button type="submit" value="Save" class="btn btn-success"><span aria-hidden="true" class="glyphicon glyphicon-ok"></span> Save Copy Details</button>
            &nbsp;&nbsp;or&nbsp;@Html.BackButton("Cancel")
        </div>
    </div>

}


<script type="text/javascript">
    $(document).ready(function () {
        $(".cssselector").datepicker({ dateFormat: 'dd/mm/yy' });

        $("#Circulated").change(function () {
            $("#circulationFields").toggle();
        });
    });
</script>