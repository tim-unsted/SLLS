@model slls.ViewModels.NotificationsViewModel

<script src="@Url.Content("~/Scripts/DatePickerReady.js")" type="text/javascript"></script>

@Html.Partial("_ModalAddEditHeader")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body">

        <div class="alert alert-info" role="alert">
            <span><span aria-hidden="true" class="glyphicon glyphicon-info-sign"></span> Notifications can be displayed on both the OPAC 'Home' page and the Admin 'Dashboard', if enabled. Notifications are simply announcements or snippets of information that you want your users to see.  Notifications can include HTML.</span>
        </div>

        <div class="form-horizontal">

            @Html.HiddenFor(m => Model.NotificationID)

            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="form-group">
                @Html.LabelFor(model => model.Headline, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Headline, new {htmlAttributes = new {@class = "form-control"}})
                    <span class="help-inline">This is the headline of the announcement. Keep it short!</span>
                    @Html.ValidationMessageFor(model => model.Headline, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Text, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Text, new {htmlAttributes = new {@class = "form-control"}})
                    <span class="help-inline">This is the main content of the announcement. This can include HTML.</span>
                    @Html.ValidationMessageFor(model => model.Text, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Scope, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Scope, new SelectList(ViewBag.ScopeTypes, "Key", "Value"), new {@class = "form-control"})
                    <span class="help-inline">Where do you want other users to see this notification?</span>
                    @Html.ValidationMessageFor(model => model.Scope, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Position, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Position, new {htmlAttributes = new {@class = "form-control"}})
                    <span class="help-inline">Sort order</span>
                    @Html.ValidationMessageFor(model => model.Position, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Visible, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Visible)
                        <span class="help-inline">Is it visible?</span>
                        @Html.ValidationMessageFor(model => model.Visible, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>

            <div class="form-group has-feedback">
                @Html.LabelFor(model => model.ExpireDate, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ExpireDate, new {htmlAttributes = new {@class = "form-control"}})
                    <span class="help-inline">Add an expiry date if you want it to be automatically removed.</span>
                    @Html.ValidationMessageFor(model => model.ExpireDate, "", new {@class = "text-danger"})
                    <i class="glyphicon glyphicon-calendar form-control-feedback"></i>
                </div>
            </div>
        </div>
    </div>
    
    @Html.Partial("_ModalEditFooter")
}

@Scripts.Render("~/bundles/modalAddEditHeader")
