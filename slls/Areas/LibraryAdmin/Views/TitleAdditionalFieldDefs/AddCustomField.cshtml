@model slls.ViewModels.CustomFieldAdd

@Html.Partial("_ModalAddEditHeader")

@using (Html.BeginForm("AddCustomField", "TitleAdditionalFieldDefs", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="modal-body">

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FieldName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FieldName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter a new Custom Field" } })
                    @Html.ValidationMessageFor(model => model.FieldName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsDate, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsDate)
                        @Html.ValidationMessageFor(model => model.IsDate, "", new { @class = "text-danger" })
                        <span class="help-inline">Will this field hold a date?</span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsNumeric, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsNumeric)
                        @Html.ValidationMessageFor(model => model.IsNumeric, "", new { @class = "text-danger" })
                        <span class="help-inline">Will this field hold numbers?</span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsBoolean, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-8">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsBoolean)
                        @Html.ValidationMessageFor(model => model.IsBoolean, "", new {@class = "text-danger"})
                        <span class="help-inline">Will this field hold true/false data?</span>
                    </div>
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.ShowOnOpac, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.ShowOnOpac)
                        @Html.ValidationMessageFor(model => model.ShowOnOpac, "", new { @class = "text-danger" })
                        <span class="help-inline">Display this field and its data on the OPAC?</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @Html.Partial("_ModalAddFooter")

}

@Scripts.Render("~/bundles/modalAddEditHeader")
