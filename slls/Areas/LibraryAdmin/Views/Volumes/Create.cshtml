@using Westwind.Globalization
@model slls.ViewModels.VolumesAddViewModel

@Html.Partial("_HeaderCancel")

<hr/>

@using (Html.BeginForm("Create", "Volumes", FormMethod.Post, new { id = "frmNew " }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Step)

        <div class="form-group">
            @Html.Label(DbRes.T("Titles.Title", "FieldDisplayName"), new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TitleId", null, "Select a " + DbRes.T("Titles.Title", "FieldDisplayName"), new { @class = "form-control selectpicker", @id = "TitleID" })
                @Html.ValidationMessageFor(model => model.TitleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(DbRes.T("Copies.Copy", "FieldDisplayName"), new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CopyId, null, "Select a " + DbRes.T("Copies.Copy", "FieldDisplayName"), new {@class = "form-control", @id = "CopyID"})
                @Html.ValidationMessageFor(model => model.CopyId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.Label(DbRes.T("CopyItems.Barcode", "FieldDisplayName"), new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Barcode, new { htmlAttributes = new { @class = "form-control" } })
                <span class="help-inline">This is the unique barcode or indentifier for the volume. This should be the same as any barcode attached to the item.</span>
                @Html.ValidationMessageFor(model => model.Barcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(DbRes.T("CopyItems.Label_Text", "FieldDisplayName"), new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LabelText, new { htmlAttributes = new { @class = "form-control" } })
                <span class="help-inline">This is the information printed on a label</span>
                @Html.ValidationMessageFor(model => model.LabelText, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.Label(DbRes.T("Borrowing.Loan_Type", "FieldDisplayName"), "Loan Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LoanTypeId", null, htmlAttributes: new { @class = "form-control" })
                <span class="help-inline">This controls how the item may be loaned or if it is Reference-Only</span>
                @Html.ValidationMessageFor(model => model.LoanTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrintLabel, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PrintLabel)
                    <span class="help-inline">Tick if you would like a label for this item to be printed.</span>
                    @Html.ValidationMessageFor(model => model.PrintLabel, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
    </div>

    <div class="form-footer">
        <button type="submit" id="btnOk" value="Add" class="btn btn-success"><span aria-hidden="true" class="glyphicon glyphicon-ok"></span> @ViewBag.BtnText</button>
        &nbsp;&nbsp;or&nbsp;<input type="button" value="Cancel" class="btn-link" onclick="window.history.back();" />
    </div>

}

<script type="text/javascript">

    $(document).ready(function () {

        $('.selectpicker').selectpicker({
            liveSearch: true,
            showSubtext: true
        });

        $("#TitleID").change(function () {
            var select = $("#CopyID");
            select.empty();

            var selectedTitleId = { TitleID: $("#TitleID").val() };

            $.ajax({
                url: '@Url.Action("GetTitleCopies", "Titles")',
                type: 'Post',
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(selectedTitleId),
                success: function (data) {
                    if (data.success) {
                        $.each(data.TitleCopyData, function (index, itemData) {
                            select.append($('<option/>', {
                                value: itemData.Value,
                                text: itemData.Text
                                }));
                            }
                        );
                        $('#LoanTypeId').val(data.DefaultloanType);
                    } else {
                        alert('invalid ID' + data.success);
                    }
                },
                async: false
            });
        });
    });
</script>
