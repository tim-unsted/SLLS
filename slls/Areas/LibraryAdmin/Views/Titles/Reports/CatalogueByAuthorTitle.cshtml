@using System.Linq
@using Westwind.Globalization
@model slls.ViewModels.TitlesReportsViewModel

@Html.Partial("_PrintHeader")

<h2>@ViewBag.Title</h2>
<hr />

@foreach (var title in Model.Titles.OrderBy(t => t.CatalogueByAuthor))
{
    <div class="row">
        <div class="col-md-12">
            <h4 class="report_h4">@Html.DisplayFor(modelItem => title.CatalogueByAuthor)</h4>
            <p>
                @Html.DisplayFor(modelItem => title.Imprint)
            </p>
            <p>
                @DbRes.T("Classmarks.Classmark", "FieldDisplayName") : @Html.DisplayFor(modelItem => title.Classmark.ClassmarkDisplay)
            </p>

            @{
    var copies = from c in title.Copies
                 where c.StatusID != null && Model.StatusTypes.Contains(c.StatusID.Value)
                 select c;

    foreach (var copy in copies.OrderBy(c => c.CopyNumber))
    {
        <div class="row">
            <div class="col-md-12 col-md-push-1">
                <p>@Html.DisplayFor(modelItem => copy.CopyLocationStatus)</p>

                @foreach (var volume in copy.Volumes)
                {
                    <div class="row">
                        <div class="col-md-12 col-md-push-1">
                            <p>
                                @DbRes.T("CopyItems.Barcode", "FieldDisplayName"): @Html.DisplayFor(modelItem => volume.VolumeDetailsByBarcode)&nbsp;&nbsp;
                                @if (volume.Borrowings.Where(b => b.Returned == null).Any())
                                {
                                    var borrowing = volume.Borrowings.Where(b => b.Returned == null).OrderByDescending(b => b.BorrowID).FirstOrDefault();
                                    if (borrowing != null)
                                    {
                                        var borrowedBy = borrowing.BorrowerUser.Fullname;
                                        var borrowed = borrowing.Borrowed.ToString();
                                        <span>Borrowed by: </span>
                                        @Html.DisplayFor(x => borrowedBy)
                                        <span> on </span>
                                        @Html.DisplayFor(x => borrowed)
                                    }
                                }
                            </p>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
            }
        </div>
    </div>
}

