@using slls.Utils.Helpers
@using Westwind.Globalization
@model slls.ViewModels.SelectTitleViewmodel

@Html.Partial("_HeaderSeeAlso", Model)

<div class="alert alert-info">

    <span class="help-block">@Html.Raw(Model.HelpText)</span>

    @using (Html.BeginForm("Select", "Titles", FormMethod.Post, new { id = "frmSelect", name = "frmSelect" }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.ReturnAction)
        @Html.HiddenFor(model => model.Tab)

        <div class="form-group">
            @Html.TextBoxFor(x => x.Title, new { @placeholder = @Model.PlaceHolderText, @class = "form-control" })
            @Html.HiddenFor(model => model.TitleID)
        </div>

        <p>
            <div class="btn-group">
                <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span aria-hidden="true" class="glyphicon glyphicon-plus-sign"></span>&nbsp;&nbsp;Add new @DbRes.T("Titles.Title", "FieldDisplayName") <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">
                    <li><a href="@Url.Action("Create", "Titles")" title="Add new @DbRes.T("Titles.Title", "FieldDisplayName")"><span aria-hidden="true" class="glyphicon glyphicon-plus-sign"></span>&nbsp;&nbsp;Add New @DbRes.T("Titles.Title", "FieldDisplayName")</a></li>
                    <li><a href="@Url.Action("DuplicateTitle", "Titles", new {id = Model.TitleID})" title="Duplicate @DbRes.T("Titles.Title", "FieldDisplayName")"><span aria-hidden="true" class="glyphicon glyphicon-duplicate"></span>&nbsp;&nbsp;Duplicate Existing @DbRes.T("Titles.Title", "FieldDisplayName")</a></li>
                </ul>
            </div>
            &nbsp;&nbsp;or&nbsp;@Html.BackButton()
        </p>

    }

</div>

@section scripts {
<script src="@Url.Content("~/Scripts/jquery.mcautocomplete.js")" type="text/javascript"></script>

    <script type="text/javascript">
        var columns = [{ name: '', minWidth: '0%', valueField: 'Id' }, { name: 'Title', minWidth: '40%', valueField: 'title' }, { name: 'Edition', minWidth: '20%', valueField: 'edition' }, { name: 'Year', minWidth: '10%', valueField: 'year' }, { name: 'Author', minWidth: '20%', valueField: 'authors' }];

        $("#Title").mcautocomplete({
            //appendTo: "#stdModal",
            autoFocus: true,
            showHeader: true,
            columns: columns,
            source: function(request, response) {
                var title = new Array();
                var urlGetTerms = "@Url.Action("AutoComplete", "Titles")";
                $.ajax({
                    async: false,
                    cache: false,
                    type: "POST",
                    url: urlGetTerms,
                    data: { "term": request.term },
                    success: function(data) {
                        for (var i = 0; i < data.length; i++) {
                            title[i] = { Id: data[i].TitleId, title: data[i].Title, edition: data[i].Edition, year: data[i].Year, authors: data[i].Authors };
                        }
                    }
                });
                response(title);
            },
            select: function(event, ui) {
                event.preventDefault();
                if (ui.item) {
                    if (ui.item.Id != null) {
                        $('#Title').val(ui.item.title);
                        $('#TitleID').val(ui.item.Id);
                        document.frmSelect.submit();
                    }
                }
                return true;
            }
        });

        $("#TitleID").change(function() {
            sessionStorage.removeItem('lastTab_EditTitle');
        });
    </script>
}