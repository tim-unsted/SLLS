@model slls.ViewModels.OrderReceiptsViewModel

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.bootstrap.js"></script>
<script src="~/Scripts/DatePickerReady.js"></script>

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h3 class="modal-title" id="titleLabel">@ViewBag.Title</h3>
</div>

@using (Html.BeginForm("DoReceipt", "OrderDetails", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="modal-body">

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.OrderID)
            @Html.HiddenFor(model => model.CallingAction)
            @Html.HiddenFor(model => model.CallingController)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-8">
                    <p class="form-control-static">@Html.DisplayFor(model => model.Title)</p>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrderNo, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.OrderNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrderNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReceivedDate, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.ReceivedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReceivedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InvoiceDate, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InvoiceRef, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.InvoiceRef, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InvoiceRef, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Passed, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Passed, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Passed, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccountYearID, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.AccountYearID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccountYearID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BudgetCodeID, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.BudgetCodeID, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.BudgetCodeID, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrderCategoryID, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.OrderCategoryID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrderCategoryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>

    <div class="modal-footer">
        <input id="btnSave" type="submit" value="Add" class="btn btn-primary" />
        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
    </div>
}


