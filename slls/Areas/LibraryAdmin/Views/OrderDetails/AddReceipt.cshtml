@using slls.Utils.Helpers
@using Westwind.Globalization
@model slls.ViewModels.OrderReceiptsViewModel

<script src="@Url.Content("~/Scripts/DatePickerReady.js")" type="text/javascript"></script>

@Html.Partial("_ModalAddEditHeader")

@using (Html.BeginForm("DoReceipt", "OrderDetails", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="modal-body">

        <div class="form-horizontal">

            <div class="alert alert-info">
                <p>Use this form to add receipt and invoice details for your order.</p>
                @Html.Raw(Model.DateWarningMsg)
            </div>

            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            @Html.HiddenFor(model => model.OrderID)
            @Html.HiddenFor(model => model.CallingAction)
            @Html.HiddenFor(model => model.CallingController)

            <div class="form-group">
                @Html.Label(DbRes.T("Titles.Title", "FieldDisplayName"), htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-8">
                    <p class="form-control-static">@Html.DisplayFor(model => model.Title)</p>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrderNo, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-3">
                    @Html.EditorFor(model => model.OrderNo, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.OrderNo, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group has-feedback has-success">
                @Html.LabelFor(model => model.ReceivedDate, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-3">
                    @Html.EditorFor(model => model.ReceivedDate, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.ReceivedDate, "", new {@class = "text-danger"})
                    <i class="glyphicon glyphicon-calendar form-control-feedback"></i>
                </div>
            </div>

            <div class="form-group has-feedback has-success">
                @Html.LabelFor(model => model.InvoiceDate, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-3">
                    @Html.EditorFor(model => model.InvoiceDate, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.InvoiceDate, "", new {@class = "text-danger"})
                    <i class="glyphicon glyphicon-calendar form-control-feedback"></i>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InvoiceRef, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.InvoiceRef, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.InvoiceRef, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group has-feedback has-success">
                @Html.LabelFor(model => model.Passed, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Passed, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Passed, "", new {@class = "text-danger"})
                    <i class="glyphicon glyphicon-calendar form-control-feedback"></i>
                </div>
            </div>

            <div class="form-group has-feedback">
                @Html.LabelFor(model => model.Link, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Link, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Link, "", new {@class = "text-danger"})
                    <i class="glyphicon glyphicon-link form-control-feedback"></i>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccountYearID, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-3">
                    @Html.DropDownList("AccountYearID", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.AccountYearID, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BudgetCodeID, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-8">
                    @Html.DropDownList("BudgetCodeID", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.BudgetCodeID, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrderCategoryID, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-8">
                    @Html.DropDownList("OrderCategoryID", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.OrderCategoryID, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Notes, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Notes, "", new {@class = "text-danger"})
                </div>
            </div>

        </div>
    </div>

    <div class="modal-footer">
        <span class="pull-left">Alternatively, <a href="@Url.Action("Edit", new {id = Model.OrderID})" class="btn btn-link" title="Edit"> Edit/Update Order</a></span>
        @Html.SaveButton("Add Invoice")
        &nbsp;&nbsp;or&nbsp;<button type="button" class="btn-link" data-dismiss="modal">@DbRes.T("Buttons.Cancel", "Terminology")</button>
    </div>
}

@Scripts.Render("~/bundles/modalAddEditHeader")


