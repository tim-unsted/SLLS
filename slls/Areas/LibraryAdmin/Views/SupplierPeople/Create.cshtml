@using Westwind.Globalization
@model slls.ViewModels.SupplierPeopleAddViewModel

<script type="text/javascript">

    $(document).ready(function () {

        $("#SupplierID").change(function () {
            var select = $("#AddressID");
            select.empty();

            var selectedSupplierID = { SupplierID: $("#SupplierID").val() };

            $.ajax({
                url: '@Url.Action("GetSelectedAddresses", "SupplierPeople")',
                type: 'Post',
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(selectedSupplierID),
                success: function (data) {
                    if (data.success) {
                        $.each(data.SupplierAddressData, function (index, itemData) {
                            select.append($('<option/>', {
                                value: itemData.Value,
                                text: itemData.Text
                            }));
                        }
                        );
                    } else {
                        alert('invalid ID' + data.success);
                    }
                },
                async: false
            });
        });
    });

</script>

@Html.Partial("_ModalAddHeader")

@using (Html.BeginForm("PostCreate","SupplierPeople", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="modal-body">

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CallingAction)
            @Html.HiddenFor(model => model.CallingController)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Surname, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Surname, "", new {@class = "text-danger"})
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.SupplierID, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SupplierID, null, "Select a " + DbRes.T("Suppliers.Supplier", "FieldDisplayName"), new { @class = "form-control", @id = "SupplierID" })
                        @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Position, htmlAttributes: new {@class = "control-label col-md-3"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Position, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Position, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AddressID, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.AddressID, null, "Select an " + DbRes.T("SupplierAddress.Address", "FieldDisplayName"), new { @class = "form-control", @id = "AddressID" })
                    @Html.ValidationMessageFor(model => model.AddressID, "", new { @class = "text-danger" })
                </div>
            </div>
            
        </div>

    </div>

    @Html.Partial("_ModalAddFooter")
}
