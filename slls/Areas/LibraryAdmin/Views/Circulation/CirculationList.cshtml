@using System.Linq
@using slls.Models
@using slls.Utils.Helpers
@using Westwind.Globalization
@model slls.ViewModels.CirculationListViewModel

@Html.Partial("_HeaderSeeAlso", Model)

<div class="alert alert-info">
   

    <div class="row" style="margin-right: 0">
        <div class="col-md-12" style="margin-bottom: 5px;"><strong>Info: </strong>This page show all @DbRes.T("Circulation.Recipients", "FieldDisplayName") for the selected @DbRes.T("Circulation.Circulated_Item", "FieldDisplayName"). Use the box below to find the @DbRes.T("Circulation.Circulated_Item", "FieldDisplayName") you wish to view.</div>
        <div class="col-md-12" title="Find the item ...">
            @Html.TextBoxFor(x => x.SelectCopy, new { @placeholder = "Start typing the item you want to view ...", @class = "form-control" })
        </div>
    </div>

    @if ((int)ViewData["CopyID"] > 0)
    {
        @Html.HorizontalSpacer()
        <div class="btn-group">
            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span aria-hidden="true" class="glyphicon glyphicon-plus-sign"></span> Add @DbRes.T("Circulation.Recipients", "FieldDisplayName") <span class="caret"></span>
            </button>
            <ul class="dropdown-menu">
                <li><a href="@Url.Action("AddRecipient", "Circulation", new { id = ViewData["CopyID"] })" class="modal-link" title="Select more @DbRes.T("Circulation.Recipient", "FieldDisplayName")">Select @DbRes.T("Circulation.Recipients", "FieldDisplayName")</a></li>
                <li><a href="@Url.Action("ImportCirculationList", "Circulation", new { id = (int)ViewData["CopyID"] })" title="Clone another @DbRes.T("Circulation.Circulation_List", "FieldDisplayName")" class="modal-link" data-toggle="modal" data-target="#lrgModal">Clone another @DbRes.T("Circulation.Circulation_List", "FieldDisplayName")</a></li>
            </ul>
        </div>
    }

    @if (Model.CirculationList.Any())
    {
        <a href="@Url.Action("RemoveAllRecipients", new {id = ViewData["CopyID"]})" class="btn btn-primary modal-link" title="Remove All @DbRes.T("Circulation.Recipients", "FieldDisplayName") from this @DbRes.T("Circulation.Circulation_List", "FieldDisplayName")"><span aria-hidden="true" class="glyphicon glyphicon-minus-sign"></span> Remove <strong>All</strong></a>
        <a href="@Url.Action("EmailAllRecipients", new {id = ViewData["CopyID"]})" class="btn btn-success modal-link" title="Email All @DbRes.T("Circulation.Recipients", "FieldDisplayName") on this @DbRes.T("Circulation.Circulation_List", "FieldDisplayName")"><span aria-hidden="true" class="glyphicon glyphicon-envelope"></span> Email @DbRes.T("Circulation.Recipients", "FieldDisplayName")</a>
    }
</div>

<div id="circulationlist">
    <table id="tblcirculationlist" class="table table-hover">
        <thead>
            <tr>
                <th>
                    @Html.Label(DbRes.T("Circulation.Recipients", "FieldDisplayName"))
                </th>
                <th>
                    @Html.Label(DbRes.T("Circulation.SortOrder", "FieldDisplayName"))
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Circulation item in Model.CirculationList)
            {
                //var recipient1 = recipient;
                //var user = (from u in Model.Recipients where u.Id == recipient1.UserID select u).FirstOrDefault();
                <tr>
                    <td>
                        @if (string.IsNullOrEmpty(item.RecipientUser.Fullname.ToString()))
                        {
                            @Html.ActionLink("xxx", "Edit", "LibraryUsers", new { id = item.RecipientUser.Id }, null)
                        }
                        else
                        {
                            @*@Html.ActionLink(item.RecipientUser.Fullname, "Edit", "LibraryUsers", new { id = item.RecipientUser.Id }, null)*@
                            <a href="@Url.Action("Edit", "LibraryUsers", new {id = item.RecipientUser.Id})" class="btn btn-link" title="Edit @DbRes.T("Circulation.Recipient", "FieldDisplayName")" data-toggle="modal" data-target="#lrgModal">@item.RecipientUser.Fullname</a>
                        }
                    </td>
                    
                    <td>
                        @Html.DisplayFor(modelItem => item.SortOrder)
                    </td>
                    <td class="just-right">
                        <a href="@Url.Action("MoveRecipientUpList", new { id = item.CirculationID })" class="btn btn-link" title="Move @DbRes.T("Circulation.Recipient", "FieldDisplayName") up List"><span aria-hidden="true" class="glyphicon glyphicon-arrow-up"></span></a>
                        <a href="@Url.Action("MoveRecipientDownList", new { id = item.CirculationID })" class="btn btn-link" title="Move @DbRes.T("Circulation.Recipient", "FieldDisplayName") down List"><span aria-hidden="true" class="glyphicon glyphicon-arrow-down"></span></a>
                        <a href="@Url.Action("Edit", "LibraryUsers", new {id = item.RecipientUser.Id})" class="btn btn-link" title="Edit @DbRes.T("Circulation.Recipient", "FieldDisplayName")" data-toggle="modal" data-target="#lrgModal"><span aria-hidden="true" class="glyphicon glyphicon-user"></span></a>
                        <a href="@Url.Action("NewEmailPopup", "Messaging", new { to = item.RecipientUser.Email, subject = "Message about: " + item.Copy.Title.Title1, area = "" })" class="modal-link" title="Email @item.RecipientUser.Firstname"><span class="glyphicon glyphicon-envelope"></span></a>
                        <a href="@Url.Action("RemoveRecipient", new { id = item.CirculationID })" class="btn btn-link modal-link" title="Remove @DbRes.T("Circulation.Recipient", "FieldDisplayName") from List"><span aria-hidden="true" class="glyphicon glyphicon-minus-sign"></span></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section scripts {
    <script src="@Url.Content("~/Scripts/jquery.mcautocomplete.js")" type="text/javascript"></script>
    @*@Scripts.Render("~/bundles/datatables")*@
    <script type="text/javascript">
        $(document).ready(function () {
            
            $('#tblcirculationlist').DataTable({
                "dom": sDom,
                "pagingType": sPagingType,
                "pageLength": sPageLength,
                "lengthMenu": sLengthMenu,
                "language": {
                    "url": "/DataTables/lang.txt"
                },
                "order": [[1, 'asc'], [0, 'asc']],
                "columnDefs": [
                    {
                        "searchable": false,
                        "sortable": true,
                        "orderSequence": ["desc", "asc"],
                        "targets": [1]
                    },
                    {
                        "width": "20%",
                        "searchable": false,
                        "sortable": false,
                        "targets": [2]
                    }
                ]
            });

            function selectAllText(textbox) {
                textbox.focus();
                textbox.select();
            }

            var columns = [{ name: '', minWidth: '0%', valueField: 'CopyId' }, { name: 'Title', minWidth: '40%', valueField: 'title' }, { name: 'Copy', minWidth: '5%', valueField: 'copyNumber' }, { name: 'Edition', minWidth: '20%', valueField: 'edition' }, { name: 'Year', minWidth: '10%', valueField: 'year' }, { name: 'Author', minWidth: '15%', valueField: 'authors' }];

            $('#SelectCopy').click(function() { selectAllText(jQuery(this)) });

            $("#SelectCopy").mcautocomplete({
                //autoFocus: true,
                showHeader: true,
                columns: columns,
                source: function(request, response) {
                    var title = new Array();
                    var urlGetTerms = "@Url.Action("SelectCirculatedCopies", "Circulation")";
                    $.ajax({
                        async: false,
                        cache: false,
                        type: "POST",
                        url: urlGetTerms,
                        data: { "term": request.term },
                        success: function(data) {
                            for (var i = 0; i < data.length; i++) {
                                title[i] = { CopyId: data[i].CopyId, title: data[i].Title, copyNumber: data[i].CopyNumber, edition: data[i].Edition, year: data[i].Year, authors: data[i].AuthorString };
                            }
                        }
                    });
                    response(title);
                },
                select: function(event, ui) {
                    event.preventDefault();
                    if (ui.item) {
                        if (ui.item.CopyId != null) {
                            $('#SelectCopy').val(ui.item.title + " - Copy: " + ui.item.copyNumber);
                            var url = '@Url.Action("CirculationList", "Circulation", new {id = "REPLACEME"})';
                            window.location.href = url.replace('REPLACEME', ui.item.CopyId);
                        }
                    }
                }
            });
        });
    </script>
}