@model slls.ViewModels.MenuViewModel
           
<script type="text/javascript">

    $(document).ready(function () {

        $("#parentArea").change(function () {
            var select = $("#parentID");
            select.empty();

            var selectedAreaID = { AreaID: $("#parentArea").val() };

            $.ajax({
                url: '@Url.Action("GetParents", "MenuBuilder")',
                type: 'Post',
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(selectedAreaID),
                success: function (data) {
                    if (data.success) {
                        $.each(data.ParentData, function (index, itemData) {
                            select.append($('<option/>', {
                                value: itemData.Value,
                                text: itemData.Text
                            }));
                        }
                        );
                    } else {
                        alert('invalid ID' + data.success);
                    }
                },
                async: false
            });
        });
    });

</script>



@Html.Partial("_ModalAddHeader")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="modal-body">

            @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
            {
                <div class="alert alert-danger">
                    <a href="#" class="close" data-dismiss="alert">&times;</a>
                    @Html.ValidationSummary()
                </div>
            }
            @Html.HiddenFor(model => model.MenuArea)
            @Html.HiddenFor(model => model.Roles)

            <div class="panel panel-success">
                <div class="panel-heading">
                    <span class="panel-title">Common Attributes:</span>
                </div>
                <div class="panel-body" style="padding: 15px 0;">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Parent Area", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-3">
                            @Html.DropDownList("ParentArea", null, htmlAttributes: new { @class = "form-control", @id = "parentArea" })
                        </div>

                        @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.DropDownList("ParentID", null, htmlAttributes: new { @class = "form-control", @id = "parentID" })
                            @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ToolTip, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ToolTip, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ToolTip, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsSelectable, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-1">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsSelectable)
                                @Html.ValidationMessageFor(model => model.IsSelectable, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.LabelFor(model => model.IsEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-1">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsEnabled)
                                @Html.ValidationMessageFor(model => model.IsEnabled, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.LabelFor(model => model.SortOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.SortOrder, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Class, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.Class, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                </div>
            </div>

            <div class="panel panel-info">
                <div class="panel-heading">
                    <span class="panel-title">Internal Links/Actions only:</span>
                </div>
                <div class="panel-body" style="padding: 15px 0;">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Controller, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(model => model.Controller, new SelectList(ViewBag.Controllers), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Controller, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Action, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Action, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Action, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LinkArea, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(model => model.LinkArea, new SelectList(ViewBag.MenuAreas, "Key", "Value"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LinkArea, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DataToggle, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(model => model.DataToggle, new SelectList(ViewBag.DataToggles, "Key", "Value"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DataToggle, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.DataTarget, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(model => model.DataTarget, new SelectList(ViewBag.DataTargets, "Key", "Value"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DataTarget, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-danger">
                <div class="panel-heading">
                    <span class="panel-title">External Links/URLs only:</span>
                </div>
                <div class="panel-body" style="padding: 15px 0;">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Target, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.Target, new SelectList(ViewBag.Targets, "Key", "Value"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Target, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

    @Html.Partial("_ModalAddFooter")

}





