@using System.Linq
@using Westwind.Globalization
@model slls.ViewModels.IpAddressAddEditViewModel

@Html.Partial("_ModalAddEditHeader")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body">

        <div class="form-horizontal">

            @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
            {
                <div class="alert alert-danger">
                    <a href="#" class="close" data-dismiss="alert">&times;</a>
                    <h4>Oops!</h4>
                    @Html.ValidationSummary()
                </div>
            }
            @Html.HiddenFor(model => model.RecId)
            @Html.HiddenFor(model => model.CanUpdate)
            @Html.HiddenFor(model => model.CanDelete)

            <div class="form-group">
                @Html.LabelFor(x => x.IpAddress1, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.IpAddress1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IpAddress1, "", new { @class = "text-danger" })
                    <span class="help-inline">A single IP address. Use an asterix wildcard (*) to specify an entire subnet if required (e.g. 10.0.*.*).</span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.AllowPassThrough, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.AllowPassThrough)
                        @Html.ValidationMessageFor(model => model.AllowPassThrough, "", new { @class = "text-danger" })
                        <span class="help-inline">Allow this IP address access when IP Filtering is active?</span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Blocked, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-8">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Blocked)
                        @Html.ValidationMessageFor(model => model.Blocked, "", new { @class = "text-danger" })
                        <span class="help-inline">Block all access via this IP address?</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    @Html.Partial("_ModalEditFooter")
}

@Scripts.Render("~/bundles/modalAddEditHeader")

