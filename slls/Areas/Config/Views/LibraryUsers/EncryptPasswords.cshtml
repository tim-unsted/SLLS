@model slls.ViewModels.GenericConfirmationViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h3 class="modal-title" id="headerLabel">@Html.DisplayFor(model => model.HeaderText)</h3>
</div>

@using (Html.BeginForm(Model.PostConfirmAction, Model.PostConfirmController, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary()
    @Html.HiddenFor(x => x.ConfirmEntityId)
    @Html.HiddenFor(x => x.PostConfirmAction)
    @Html.HiddenFor(x => x.PostConfirmController)
    @Html.HiddenFor(x => x.HeaderText)

    <div class="modal-body">
        <div class="control-group">
            @{
                if (Model.Count > 0)
                {
                    <p>
                        There are currently <strong>@Model.Count</strong> users with temporary, plain-text, passwords. Users will be unable to log in until their temporary passwords have been encypted.
                    </p>
                    <p>
                        This may take several minutes, depending on the number of users involved. However, the process will run in the background so you can continue working.
                    </p>
                    <p>
                        <span class='error'><strong>Note: </strong>Each user record requires a <i>unique</i> email address for this process to work. User records without an email address, or those with duplicate addresses, will be ignored.</span>
                    </p>
                    <p>
                        Do you want to continue?
                    </p>
                }
                else
                {
                    <p>
                        There are currently no (0) users with temporary, plain-text, passwords.
                    </p>
                }
            }
            
        </div>
    </div>

    <div class="modal-footer">
        <button id="btnConfirm" class="btn @Model.ConfirmButtonClass" type="submit"><span aria-hidden="true" class="glyphicon @Model.Glyphicon"></span> @Html.DisplayFor(model => model.ConfirmButtonText)</button>
        @{
            if (Model.Count > 0)
            {
                <span>&nbsp; &nbsp; or &nbsp;<button class="btn-link" data-dismiss="modal" aria-hidden="true" type="button">@Html.DisplayFor(model => model.CancelButtonText)</button></span>
            }
        }
    </div>
}

@Scripts.Render("~/bundles/modalAddEditHeader")