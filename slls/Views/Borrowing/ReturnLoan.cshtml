@using Westwind.Globalization
@model slls.ViewModels.ReturnLoanViewModel

@Html.Partial("_HeaderSeeAlso", Model)

@using (Html.BeginForm("DoReturnLoan", "Borrowing", FormMethod.Post, new { id = "frmReturnloan", name = "frmReturnloan" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        
        @Html.Partial("_PostAlert")

        <div class="well">
            <div class="form-group has-feedback" id="barcodeGroup">
                @Html.Label(DbRes.T("Borrowing.Item_To_Return", "FieldDisplayName"), htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Barcode, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter or Scan the " + Html.DisplayNameFor(x => x.Barcode) } })
                    @Html.ValidationMessageFor(model => model.Barcode, "", new { @class = "text-danger" })
                    <i class="glyphicon glyphicon-barcode form-control-feedback"></i>
                </div>
            </div>

            <div class="form-group" id="_barcodeInvalid" style="display: none;">
                <div class="col-md-2"></div>
                <div class="col-md-10">
                    <span id="errMsg" class="text-danger field-validation-error"></span>
                </div>
            </div>

            <div id="barcodeDetails" style="display: none;">
                <dl class ="dl-horizontal">
                    <dt>@DbRes.T("Titles.Title", "FieldDisplayName")</dt>
                    <dd><span id="title"></span></dd>
                    <dt>@DbRes.T("Borrowing.Borrowed_By", "FieldDisplayName")</dt>
                    <dd><span id="borrowedby"></span></dd>
                    <dt>@DbRes.T("Borrowing.Date_Return_Due", "FieldDisplayName")</dt>
                    <dd><span id="returndue"></span></dd>
                </dl>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" value="Return Loan" class="btn btn-success" id="cmdReturn"><span aria-hidden="true" class="glyphicon glyphicon-ok"></span> Return Loan</button>
                    &nbsp;&nbsp;or&nbsp;<button type="button" class="btn-link" onclick="window.history.back();">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}

<div class="form-horizontal">
    <div class="alert alert-info">

        <p>
            <strong>Tip: </strong>If you don't have the item to hand and you don't know the @DbRes.T("CopyItems.Barcode", "FieldDisplayName") of the item, select it from the drop-down list below:
        </p>
        <br/>

        <div class="form-group">
            @Html.Label(DbRes.T("Borrowing.Current_Loans", "FieldDisplayName"), htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-9">
                @Html.DropDownList("VolumeID", Model.Volumes.OrderBy(v => v.Text), "Select an " + DbRes.T("Borrowing.Item_To_Return", "FieldDisplayName"), htmlAttributes: new {@class = "form-control"})
            </div>
        </div>
    </div>
</div>

<div id="confirmDialog" title="Confirm Return">
    <p>You are about to return the following item. Do you want to continue?</p>
    <dl class="dl-horizontal">
        <dt>@DbRes.T("Titles.Title", "FieldDisplayName")</dt>
        <dd><span id="confirmTitle"></span></dd>
        <dt>@DbRes.T("Borrowing.Borrowed_By", "FieldDisplayName")</dt>
        <dd><span id="confirmBorrowedBy"></span></dd>
        <dt>@DbRes.T("Borrowing.Date_Return_Due", "FieldDisplayName")</dt>
        <dd><span id="confirmReturnDue"></span></dd>
    </dl>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        
        $('#confirmDialog').dialog({
            dialogClass: "no-close",
            autoOpen: false,
            width: 600,
            modal: true,
            resizable: false,
            buttons: [{
                text: 'Continue',
                "class": 'btn btn-success',
                click: function () {
                    document.frmReturnloan.submit();
                }
            },
            {
                text: 'Cancel',
                "class": 'btn btn-default',
                click: function () {
                    $(this).dialog("close");
                }
            }]
        });

        $('#frmReturnloan').submit(function (e) {
            e.preventDefault();
            if ($(this).valid()) {
                $("#warning-msg").hide();
                $('#confirmDialog').dialog("open");
            }
            return false;
        });

        function doTitleCopyDetails() {
            var details = $("#barcodeDetails");
            var title = $("#title");
            var confirmTitle = $("#confirmTitle");
            var barcode = $("#Barcode");
            var borrowedby = $("#borrowedby");
            var confirmBorrowedBy = $("#confirmBorrowedBy");
            var returndue = $("#returndue");
            var confirmReturnDue = $("#confirmReturnDue");
            var errorDiv = $("#_barcodeInvalid");
            var errorMsg = $("#errMsg");
            var barcodeGroup = $("#barcodeGroup");
            var button = $("#cmdReturn");
            var selectedBarcode = { volumeId: $("#VolumeID option:selected").val() };

            $.ajax({
                url: '@Url.Action("GetBorrowedItemDetails", "Borrowing")',
                type: 'Post',
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(selectedBarcode),
                success: function (data) {
                    if (data.success) {
                        details.show();
                        barcode.val(data.Barcode);
                        title.text(data.BarcodeDetails);
                        confirmTitle.text(data.BarcodeDetails);
                        borrowedby.text(data.BorrowedBy);
                        confirmBorrowedBy.text(data.BorrowedBy);
                        returndue.text(data.origReturnDue);
                        confirmReturnDue.text(data.origReturnDue);
                        errorDiv.hide();
                        barcodeGroup.removeClass("has-error");
                        button.prop('disabled', false);

                    } else {
                        details.hide();
                        errorMsg.text(data.BarcodeDetails);
                        errorDiv.show();
                        barcodeGroup.addClass("has-error ");
                        button.prop('disabled', true);
                    }
                },
                async: false
            });
        }
    
        //Do something to display the title and copy details of the selected volume (currnelt loans) ...
        $("#VolumeID").change(function () {
            doTitleCopyDetails();
        });

        //Do something to display the title and copy details of the entered or selected barcode ...
        $("#Barcode").change(function () {
            doTitleCopyDetails();
        });

    })
</script>
