@using Westwind.Globalization
@model slls.ViewModels.ConfirmationRenewReturnViewModel

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h3 class="modal-title" id="headerLabel">@Html.DisplayFor(model => model.HeaderText)</h3>
</div>

@using (Html.BeginForm(Model.PostConfirmAction, Model.PostConfirmController, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary()
    @Html.HiddenFor(x => x.BorrowID)
    @Html.HiddenFor(x => x.PostConfirmAction)
    @Html.HiddenFor(x => x.PostConfirmController)
    @Html.HiddenFor(x => x.HeaderText)
    
    <div class="modal-body">
        <div class="control-group">
            @Html.Raw(Model.DetailsText)
            <dl class="dl-horizontal">
                <dt>@DbRes.T("Titles.Title", "FieldDisplayName"):</dt>
                <dd>@Html.Raw(Model.Title)</dd>
                <dt>@DbRes.T("Borrowing.Borrowed_By", "FieldDisplayName"):</dt>
                <dd>@Html.Raw(Model.Borrower)</dd>
                <dt>@DbRes.T("Borrowing.Borrowed", "FieldDisplayName"):</dt>
                <dd>@Html.Raw(Model.Borrowed)</dd>
                <dt>@DbRes.T("Borrowing.Date_Return_Due", "FieldDisplayName"):</dt>
                <dd>@Html.Raw(Model.ReturnDue)</dd>
            </dl>
            @Html.Raw(Model.ConfirmationText)
        </div>
    </div>

    <div class="modal-footer">
        <button id="btnConfirm" class="btn @Model.ConfirmButtonClass" type="submit"><span class="glyphicon @Model.Glyphicon"></span> @Html.DisplayFor(model => model.ConfirmButtonText)</button>
        &nbsp;&nbsp;or&nbsp;<button class="btn-link" data-dismiss="modal" aria-hidden="true" type="button">@Html.DisplayFor(model => model.CancelButtonText)</button>
    </div>
}

<script type="text/javascript">
    $(function () {
        $('form').submit(function (e) {
            e.preventDefault();
            $.post(this.action, $(this).serialize(), function (response) {
                if (response.error) {
                    alert(response.error);
                }
                else {
                    $('#stdModal').modal('hide');
                    $('#lrgModal').modal('hide');
                    location.reload();
                }
            }, 'json');
        });
    });
</script>