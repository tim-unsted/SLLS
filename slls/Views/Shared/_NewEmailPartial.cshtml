@using slls.Utils.Helpers
@model slls.ViewModels.NewEmailViewModel

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="form-group">
    @Html.LabelFor(model => model.From, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.From, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
    </div>
</div>

@if (Model.ShowCc)
{
    <div class="form-group">
        @Html.LabelFor(model => model.Cc, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cc, "", new { @class = "text-danger" })
        </div>
    </div>
}

@if (Model.ShowBcc)
{
    <div class="form-group">
        @Html.LabelFor(model => model.Bcc, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Bcc, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Bcc, "", new {@class = "text-danger"})
        </div>
    </div>
}

@if (Model.ShowImportant)
{
    <div class="form-group">
        @Html.LabelFor(model => model.Important, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Important)
                @Html.ValidationMessageFor(model => model.Important, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>
}

<div class="form-group">
    @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Message, htmlAttributes: new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.EditorFor(model => model.Message, new {htmlAttributes = new {@class = "form-control"}})
        @Html.ValidationMessageFor(model => model.Message, "", new {@class = "text-danger"})
    </div>
</div>

@if (Model.ShowCaptcha)
{
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @Html.ValidationMessage("reCaptcha", new { @class = "text-danger" })
            @Html.ReCaptcha()
        </div>
    </div>
}

