@model slls.ViewModels.SimpleSearchingViewModel
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("AdminSearchResults", "Searching", FormMethod.Post, new { id = "searchForm", defaultbutton = "btnSubmit" }))
{
    <div class="alert alert-info" id="searchHeader">
        <div class="row">
            <div class=" col-md-12">
                <div class="form-group form-inline" style="margin-bottom: 0;">
                    <span class="pull-right"><a href="#" onclick="$('#helpAlert').toggle()">Help <span aria-hidden="true" class="glyphicon glyphicon-info-sign"></span></a></span>
                    @Html.LabelFor(model => model.SearchString)<span>:&nbsp;</span>
                    @Html.EditorFor(model => model.SearchString, new { htmlAttributes = new { @class = "form-control", placeholder = "Find ...", style = "width: 50%", id = "MainSearchString" } })
                    <span>&nbsp;&nbsp;</span>@Html.Label("In")<span>:&nbsp;</span>
                    @Html.DropDownList("SearchField", null, new { @class = "form-control", style = "width: 20%" })
                    <button type="submit" id="btnSubmit" value="Find" class="btn btn-primary"><span aria-hidden="true" class="glyphicon glyphicon-search"></span> Find</button>
                </div>
                @Html.ValidationMessageFor(model => model.SearchString, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="alert alert-info" id="helpAlert" style="display: none;">
            <a class="close" onclick="$('#helpAlert').hide()">×</a>
            <h4><span aria-hidden="true" class="glyphicon glyphicon-info-sign"></span> Searching Tips</h4>
            @Html.Raw(ViewBag.SearchTips)
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            @if (Model.Results != null)
            {
                <div class="panel">
                    <div class="panel-heading" style="padding: 0 10px;">
                        <span style="font-size: 18px;">Refine By</span>
                        <span class="pull-right"><a href="@Url.Action("ClearAllFilters", "Searching")" class="btn btn-link" title="Clear All Filters"><span aria-hidden="true" class="glyphicon glyphicon-minus-sign"></span> Clear All</a></span>
                    </div>
                    <div class="panel-body">
                        @if (Model.KeywordFilter.Count > 0)
                        {
                            @Html.Partial("_AdminNarrowByKeyword")
                        }
                        @if (Model.MediaFilter != null)
                        {
                            @Html.Partial("_AdminNarrowByMedia")
                        }
                        @if (Model.ClassmarksFilter != null)
                        {
                            @Html.Partial("_AdminNarrowByClassmark")
                        }
                        @if (Model.PublisherFilter != null)
                        {
                            @Html.Partial("_AdminNarrowByPublisher")
                        }
                        @if (Model.AuthorFilter.Count > 0)
                        {
                            @Html.Partial("_AdminNarrowByAuthor")
                        }
                        @if (Model.LanguageFilter != null)
                        {
                            @Html.Partial("_AdminNarrowByLanguage")
                        }
                    </div>
                </div>
            }
        </div>
        <div class="col-md-9" style="border-left: 1px solid #eee;">
            @if (Model.Results != null)
            {
                @Html.Partial("_AdminResults")
            }
        </div>
    </div>
}

@section scripts {
    <script type="text/javascript">
        $(document).ready(function() {
            $('#MainSearchString').focus();

            $('#titles').DataTable({
                "dom": sDom,
                "pagingType": sPagingType,
                "pageLength": sPageLength,
                "lengthMenu": sLengthMenu,
                "language": {
                    "url": "/DataTables/lang.txt"
                },
                "order": [0, 'asc'],
                "autoWidth": false,
                "columnDefs": [
                    {
                        "width": "25%",
                        "orderData": 6,
                        "orderSequence": ["desc", "asc"],
                        "targets": [0],
                        "render": function (data, type, row) {
                            return '<a href="EditTitle/' + row[5] + '" class="btn-link">' + data + '</a>';
                        }
                    },
                    {
                        "width": "10%",
                        "targets": [1, 2]
                    },
                    {
                        "width": "15%",
                        "targets": [3, 4]
                    },
                    //{
                    //    "width": "10%",
                    //    "targets": [5]
                    //},
                    {
                        "visible": false,
                        "targets": [5, 6]
                    },
                    {
                        "sortable": false,
                        "width": "10%",
                        "targets": [7]
                    }
                ],
                initComplete: function () {
                    var api = this.api();
                    this.api().columns('.select-filter').every(function () {
                        var column = this;
                        var select = $('<select class="form-control" style="width:100%;"><option value=""></option></select>')
                            .appendTo($(column.footer()))
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>');
                        });
                    });
                }
            });
        });
    </script>
}