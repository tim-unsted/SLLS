@using System.Linq
@using slls.Utils.Helpers
@using Westwind.Globalization
@model slls.ViewModels.SimpleSearchingViewModel


<div class="form-group form-inline" style="margin-bottom: 10px;">
    @if (Model.Results.Any())
    {
        <span class="pull-right">Sort Results: @Html.DropDownList("OrderBy", null, new { @class = "form-control", id = "OrderResults" })</span>
    }
    @if (Model.IsActualSearch && Model.Results.Any())
    {
        <h3 style="margin-top: 0;">Search results for '@Model.SearchString'</h3>
    }
    
    @if (Model.IsActualSearch && Model.Results.Any() && User.Identity.IsAuthenticated)
    {
        //Only show the 'Save Search' button for actual searches ...
        <a href="@Url.Action("SaveSearch", "Home")" title="Save Search" class="btn btn-success modal-link"><span aria-hidden="true" class="glyphicon glyphicon-floppy-disk"></span> Save</a>
    }
    <div class="btn-group">
        @if (Model.LibraryStaff && Model.Results.Any()) //Only show the 'Export' button for library staff ...
        {
            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" title="Export results to Excel">
                <span aria-hidden="true" class="glyphicon glyphicon-plus-sign"></span> Export <span class="caret"></span>
            </button>
            <ul class="dropdown-menu">
                <li><a href="@Url.Action("ExportCatalogueResults", "Searching", new {exportType = "titles"})" class="btn-link" title="Export Title data">Titles only</a></li>
                <li><a href="@Url.Action("ExportCatalogueResults", "Searching", new {exportType = "titlescopies"})" title="Export Titles & Copy details" class="btn-link">Titles & Copy details</a></li>
                <li><a href="@Url.Action("ExportCatalogueResults", "Searching", new {exportType = "titlescopiesvolumes"})" title="Export Titles, Copies & Copy Item (Volume) details" class="btn-link">Titles, Copies & Copy Item details</a></li>
            </ul>
        }
    </div>
</div>
<br />
<table id="titles" class="table table-condensed table-no-border">
    <thead>
        <tr>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>

    <tbody>

        @foreach (var item in Model.Results)
        {
            var colClass = "col-md-12";
            <tr>
                <td>
                    <div>
                        <div class="caption">
                            <span class="pull-right">
                                @if (Model.LibraryStaff)
                                {
                                    @*<a href="@Url.Action("Delete", "Titles", new {id = item.TitleID, view=@Html.CurrentViewName()})" class="btn btn-link modal-link" title="Delete @DbRes.T("Titles.Title", "FieldDisplayName")"><span aria-hidden="true" class="glyphicon glyphicon-trash"></span></a>*@
                                    <a href="@Url.Action("Edit", "Titles", new {id = item.TitleID, area = "LibraryAdmin"})" class="btn btn-link" title="Edit @DbRes.T("Titles.Title", "FieldDisplayName")"><span aria-hidden="true" class="glyphicon glyphicon-pencil"></span></a>
                                }
                                else
                                {
                                    <a href="@Url.Action("BookDetails", new {id = item.TitleID})" class="btn btn-link" title="View @DbRes.T("Titles.Title", "FieldDisplayName")"><span aria-hidden="true" class="glyphicon glyphicon-eye-open"></span></a>
                                }
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <a href="@Url.Action("Add", "LibraryUserBookmarks", new {id = item.TitleID})" class="btn btn-link modal-link" title="Bookmark @DbRes.T("Titles.Title", "FieldDisplayName")"><span aria-hidden="true" class="glyphicon glyphicon-bookmark"></span></a>
                                }

                            </span>
                            @{var title = string.IsNullOrEmpty(item.Title1) ? Html.Raw("[No Title]") : Html.DisplayFor(modelItem => item.Title1); }
                            <a href="@Url.Action("BookDetails", new {id = item.TitleID})" class="btn btn-link" title="View @DbRes.T("Titles.Title", "FieldDisplayName")"><h4 class="results-h4">@title</h4></a>
                        </div>
                        <div class="row" style="margin-left: 2px; margin-bottom: 0;">
                            @if (item.TitleImages.Any())
                            {
                                var image = item.TitleImages.FirstOrDefault(i => i.IsPrimary) ?? item.TitleImages.FirstOrDefault();
                                if (image != null)
                                {
                                    colClass = "col-md-10";
                                    <div class="col-md-2">
                                        <div class="coverthumbnail">
                                            <a href="@Url.Action("BookDetails", new {id = item.TitleID})" class="btn btn-link" title="View @DbRes.T("Titles.Title", "FieldDisplayName")">
                                                <img src="@Url.Action("RenderImage", "Files", new { id = image.ImageId, area = "" })" alt="@image.Alt" style="width: 100%;">
                                            </a>
                                        </div>
                                    </div>
                                }
                            }
                            <div class=@colClass>
                                <dl class="dl-horizontal">
                                    @if (!string.IsNullOrEmpty(item.Title1))
                                    {
                                        <dt>@Html.DisplayName(DbRes.T("Titles.Title", "FieldDisplayName")):</dt>
                                        <dd><a href="@Url.Action("BookDetails", new {id = item.TitleID})" class="btn btn-link" title="View @DbRes.T("Titles.Title", "FieldDisplayName")">@Html.DisplayFor(modelItem => item.Title1)</a></dd>
                                    }

                                    @if (!string.IsNullOrEmpty(item.Edition))
                                    {
                                        <dt>@Html.DisplayName(DbRes.T("Titles.Edition", "FieldDisplayName")):</dt>
                                        <dd>@Html.DisplayFor(modelItem => item.Edition)</dd>
                                    }

                                    @if (item.TitleAuthors.Any())
                                    {
                                        <dt>@Html.DisplayName(DbRes.T("Titles.Authors", "FieldDisplayName")):</dt>
                                        foreach (var author in item.TitleAuthors)
                                        {
                                            <dd>
                                                <a href="@Url.Action("BrowseByAuthor", "Home", new {id = author.AuthorId}, null)" title="Browse other items by this Author">@author.Author.DisplayName</a><br />
                                            </dd>
                                        }
                                    }

                                    @if (!string.IsNullOrEmpty(item.Imprint))
                                    {
                                        <dt>@Html.DisplayName(DbRes.T("Titles.Imprint", "FieldDisplayName")):</dt>
                                        <dd>@Html.DisplayFor(modelItem => item.Imprint)</dd>
                                    }

                                    @if (!string.IsNullOrEmpty(item.Isbn))
                                    {
                                        <dt>@Html.DisplayName(DbRes.T("Titles.ISBN_ISSN", "FieldDisplayName")):</dt>
                                        <dd>@Html.DisplayFor(modelItem => item.Isbn)</dd>
                                    }

                                    @if (!string.IsNullOrEmpty(item.MediaType.Media))
                                    {
                                        <dt>@Html.DisplayName(DbRes.T("MediaTypes.Media_Type", "FieldDisplayName")):</dt>
                                        <dd>@Html.DisplayFor(modelItem => item.MediaType.Media)</dd>
                                    }
                                    
                                    @if (!string.IsNullOrEmpty(item.Classmark.Classmark1))
                                    {
                                        <dt>@Html.DisplayName(DbRes.T("Classmarks.Classmark", "FieldDisplayName")):</dt>
                                        <dd>@Html.DisplayFor(modelItem => item.Classmark.Classmark1)</dd>
                                    }

                                    @if (item.TitleLinks.Any())
                                    {
                                        <dt>@Html.DisplayName(DbRes.T("Titles.Links", "FieldDisplayName")):</dt>
                                        foreach (var link in item.TitleLinks)
                                        {
                                            <dd>
                                                @Html.ResolvedLink(link.URL, link.FileId ?? 0, link.HoverTip, link.DisplayText)
                                                @if (!string.IsNullOrEmpty(link.Login))
                                                {
                                                    <span class="help-inline">
                                                        &nbsp;&nbsp;(Login = "@link.Login"
                                                    </span>

                                                    if (!string.IsNullOrEmpty(link.Password))
                                                    {
                                                        <span class="help-inline">
                                                            ;&nbsp;Password = "@link.Password"
                                                        </span>
                                                    }
                                                    <span class="help-inline">)</span>
                                                }
                                            </dd>
                                        }
                                    }

                                    @if (item.SubjectIndexes.Any())
                                    {
                                        <dt>@Html.DisplayName(DbRes.T("Titles.Keywords", "FieldDisplayName")):</dt>
                                        <dd>
                                            @foreach (var index in item.SubjectIndexes)
                                            {
                                                <a href="@Url.Action("BrowseBySubject", "Home", new {id = index.KeywordID}, null)" title="Browse other items catalogued against this subject" style="text-decoration: underline;">@index.Keyword.KeywordTerm</a>
                                            }
                                        </dd>
                                    }

                                    @if (item.Copies.Any(x => x.StatusType.Opac))
                                    {
                                        <dt>@Html.DisplayName(DbRes.T("Titles.Copies", "FieldDisplayName"))&nbsp;<span class="badge">@item.Copies.Count(x => x.StatusType != null && x.StatusType.Opac)</span>:</dt>
                                        foreach (var copy in item.Copies)
                                        {
                                            <dd>
                                                @Html.DisplayFor(x => copy.Location.LocationString)
                                            </dd>
                                        }
                                    }
                                </dl>
                            </div>
                        </div>
                        <hr style="margin-top: 0; margin-bottom: 10px;" />
                    </div>
                </td>
                <td>@Html.Raw(item.FiledTitle)</td> @*Column 1: This field is hidden; it's used for sorting*@
                <td>@Html.Raw(item.TitleID)</td> @*Column 2: This field is hidden; it's used for sorting*@
                <td>@Html.Raw(item.Classmark.Classmark1)</td> @*Column 3: This field is hidden; it's used for sorting*@
                <td>@Html.Raw(item.AuthorString)</td> @*Column 4: This field is hidden; it's used for sorting*@
                <td>@Html.Raw(item.Year)</td> @*Column 5: This field is hidden; it's used for sorting*@
                <td>@Html.DisplayFor(modelItem => item.Copies.OrderByDescending(c => c.Commenced).FirstOrDefault(c => c.AcquisitionsList).CommencedSortable)</td> @*Column 6: This field is hidden; it's used for sorting*@
            </tr>

        }
    </tbody>

</table>
